version: "3.9"
services:
  ddd-autohaus:
    image: ghcr.io/dqualizer/dqsamples-ddd-autohaus
    ports:
      - "9000:9000"

  dqAnalyzer:
    image: ghcr.io/dqualizer/dqanalyzer-react:ak-ms-devops
    ports:
      - "9090:80"
    environment:
      - VITE_BACKEND_URL=http://localhost:8099
    depends_on:
      dqApi:
        condition: service_healthy

  dqApi:
    image: ghcr.io/dqualizer/dqapi:dqlang2.14
    ports:
      - "8099:8099"
    environment:
      - SPRING_RABBITMQ_HOST=rabbit
      - SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE=admin
      - SPRING_DATA_MONGODB_HOST=dqDatabase
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_USERNAME=root
      - SPRING_DATA_MONGODB_PASSWORD=example
      - SPRING_DATA_MONGODB_DATABASE=dqualizer
    healthcheck:
      test: wget --no-verbose --tries=1 --spider localhost:8099/actuator/health || exit 1
      interval: 60s
      start_period: 5s
      retries: 5
      timeout: 10s

  dqTranslator:
    image: ghcr.io/dqualizer/dqtranslator:rqa-definition-api
    ports:
      - "8080:8080"
    environment:
      - SPRING_RABBITMQ_HOST=rabbit
      - DQUALIZER_DQAPI_HOST=dqApi
      - DQUALIZER_DQAPI_PORT=8099
    depends_on:
      rabbit:
        condition: service_healthy

  dqExec:
    image: ghcr.io/dqualizer/dqexec:switching_to_dqlang
    ports:
      - "8090:8090"
    volumes:
      - ./docker-output/logging:/app/logging
      - ./docker-output/scripts:/app/scripts
    environment:
      - SPRING_RABBITMQ_HOST=rabbit
      - dqualizer.dqexec.influx.host=influxdb
      - dqualizer.dqexec.docker.localhost_replacement=ddd-autohaus
      - K6_INFLUXDB_ORGANIZATION=${DOCKER_INFLUXDB_INIT_ORG}
      - K6_INFLUXDB_BUCKET=${DOCKER_INFLUXDB_INIT_BUCKET}
      - K6_INFLUXDB_TOKEN=${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}
    depends_on:
      rabbit:
        condition: service_healthy
      influxdb:
        condition: service_started
      ddd-autohaus:
        condition: service_started

  dqDatabase:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017
    volumes:
      - ./data:/data

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=example
      - ME_CONFIG_MONGODB_URL=mongodb://root:example@dqDatabase:27017/
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_SERVER=dqDatabase

  rabbit:
    image: rabbitmq:3-management
    user: rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 2s
      timeout: 5s
      retries: 20
      start_period: 5s

  influxdb:
    image: influxdb:latest
    environment:
      - DOCKER_INFLUXDB_INIT_MODE
      - DOCKER_INFLUXDB_INIT_USERNAME
      - DOCKER_INFLUXDB_INIT_PASSWORD
      - DOCKER_INFLUXDB_INIT_ORG
      - DOCKER_INFLUXDB_INIT_BUCKET
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN
    ports:
      - "8086:8086"

  grafana:
    image: ghcr.io/dqualizer/dqcockpit
    ports:
      - "${GRAFANA_PORT}:3000"
    environment:
      - GF_PANELS_DISABLE_SANITIZE_HTML=TRUE
      - GF_SECURITY_ADMIN_PASSWORD=demo
      - GF_PATHS_PROVISIONING=/usr/share/grafana/custom/
      - DOCKER_INFLUXDB_INIT_ORG
      - DOCKER_INFLUXDB_INIT_BUCKET
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN
    depends_on:
      - influxdb
